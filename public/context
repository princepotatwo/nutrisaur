# NutriSaur Application Context

## Database Structure

### Main Table: `community_users`
- **Primary Key**: `community_user_id` (AUTO_INCREMENT)
- **Unique Identifier**: `email` (used as the main identifier for operations)
- **Columns**:
  - `community_user_id` - Primary key (int, auto-increment)
  - `name` - User's full name (varchar)
  - `email` - User's email address (varchar, unique identifier)
  - `password` - Hashed password (varchar)
  - `municipality` - Municipality name (varchar)
  - `barangay` - Barangay name (varchar)
  - `sex` - Gender (enum: 'Male', 'Female')
  - `birthday` - Date of birth (date)
  - `age` - Calculated age (int)
  - `is_pregnant` - Pregnancy status (tinyint: 0=No, 1=Yes, NULL=Not applicable)
  - `weight` - Weight in kg (decimal)
  - `height` - Height in cm (decimal)
  - `muac` - Mid-Upper Arm Circumference (decimal)
  - `bmi` - Calculated BMI (decimal)
  - `bmi_category` - BMI classification (varchar)
  - `muac_category` - MUAC classification (varchar)
  - `nutritional_risk` - Risk level (varchar)
  - `screening_date` - Date of screening (timestamp)
  - `screened_by` - Health worker name (varchar)
  - `notes` - Additional notes (text)
  - `follow_up_required` - Follow-up needed (tinyint)
  - `follow_up_date` - Follow-up date (date)
  - `status` - User status (enum: 'active', 'inactive', 'deleted')
  - `created_at` - Creation timestamp
  - `updated_at` - Last update timestamp

## Key Points

1. **Email as Identifier**: The application uses `email` as the primary identifier for user operations, not `community_user_id`
2. **Weight/Height Storage**: Stored as `weight` and `height` (not `weight_kg`/`height_cm`)
3. **Pregnancy Field**: Only relevant for females aged 18-50
4. **Dynamic Classifications**: BMI and nutritional risk are calculated dynamically
5. **Screening Process**: Users go through screening form with same validation as edit form

## API Endpoints

### User Management
- `get_community_user_data` - Get user data by email
- `update_community_user` - Update user data
- `check_email_exists` - Check if email already exists
- `register_community_user` - Register new user

### Edit User Functionality
- Modal opens with user data pre-populated
- Same validation as screening form
- Email uniqueness check before saving
- Real-time validation and error messages

## Validation Rules

### Email Validation
- Required field
- Valid email format (regex: /^[^\s@]+@[^\s@]+\.[^\s@]+$/)
- Uniqueness check (no duplicates)

### Weight/Height Validation
- Weight: 0.1 - 1000 kg
- Height: 1 - 300 cm
- Age-based validation for realistic values

### Pregnancy Field
- Only shown for females aged 18-50
- Required when visible
- Values: "Yes" or "No"

## Modal Positioning
- Centered on screen using CSS transforms
- Responsive design with max-height constraints
- Save button always visible at bottom
