digraph WHOGrowthStandardsDecisionTree {
    // Graph styling
    rankdir=TB;
    node [shape=box, style=filled, fontname="Arial", fontsize=10];
    edge [fontname="Arial", fontsize=9];
    
    // Start node
    start [label="Input: Weight, Height, Birth Date, Sex", fillcolor="#e1f5fe", shape=ellipse];
    
    // Validation nodes
    validate [label="Validate Input\n• Weight: 0.1-200 kg\n• Height: 1-300 cm\n• Age: 0-71 months\n• Sex: Male/Female", fillcolor="#fff3e0"];
    
    // Age calculation
    calcAge [label="Calculate Age in Months\nAge = (Current Date - Birth Date) / 30.44", fillcolor="#f3e5f5"];
    
    // BMI calculation
    calcBMI [label="Calculate BMI\nBMI = Weight(kg) / Height(m)²", fillcolor="#f3e5f5"];
    
    // Main decision branches
    wfa [label="Weight-for-Age\n(0-71 months)", fillcolor="#e8f5e8"];
    hfa [label="Height-for-Age\n(0-71 months)", fillcolor="#e8f5e8"];
    wfh [label="Weight-for-Height\n(45-120 cm)", fillcolor="#e8f5e8"];
    wfl [label="Weight-for-Length\n(45-110 cm)", fillcolor="#e8f5e8"];
    bfa [label="BMI-for-Age\n(0-71 months)", fillcolor="#e8f5e8"];
    
    // Z-score calculation nodes
    wfaCalc [label="WFA Z-Score\nZ = (Weight - Median) / SD\nLookup by Age & Sex", fillcolor="#fff9c4"];
    hfaCalc [label="HFA Z-Score\nZ = (Height - Median) / SD\nLookup by Age & Sex", fillcolor="#fff9c4"];
    wfhCalc [label="WFH Z-Score\nZ = (Weight - Median) / SD\nLookup by Height & Sex", fillcolor="#fff9c4"];
    wflCalc [label="WFL Z-Score\nZ = (Weight - Median) / SD\nLookup by Height & Sex", fillcolor="#fff9c4"];
    bfaCalc [label="BFA Z-Score\nZ = (BMI - Median) / SD\nLookup by Age & Sex", fillcolor="#fff9c4"];
    
    // Classification decision nodes
    wfaClass [label="WFA Classification\nZ < -3: Severely Underweight\n-3 ≤ Z < -2: Underweight\n-2 ≤ Z ≤ 2: Normal\nZ > 2: Overweight", fillcolor="#ffebee"];
    hfaClass [label="HFA Classification\nZ < -3: Severely Underweight\n-3 ≤ Z < -2: Underweight\n-2 ≤ Z ≤ 2: Normal\nZ > 2: Overweight", fillcolor="#ffebee"];
    wfhClass [label="WFH Classification\nZ < -3: Severely Underweight\n-3 ≤ Z < -2: Underweight\n-2 ≤ Z ≤ 2: Normal\nZ > 2: Overweight", fillcolor="#ffebee"];
    wflClass [label="WFL Classification\nZ < -3: Severely Underweight\n-3 ≤ Z < -2: Underweight\n-2 ≤ Z ≤ 2: Normal\nZ > 2: Overweight", fillcolor="#ffebee"];
    bfaClass [label="BFA Classification\nZ < -3: Severely Underweight\n-3 ≤ Z < -2: Underweight\n-2 ≤ Z ≤ 2: Normal\nZ > 2: Overweight", fillcolor="#ffebee"];
    
    // Risk assessment
    riskAssess [label="Risk Assessment\n• Severe: Any indicator = Severely Underweight\n• Moderate: Any indicator = Underweight/Overweight\n• Low: All indicators = Normal", fillcolor="#e3f2fd"];
    
    // Recommendations
    recommendations [label="Generate Recommendations\n• Severe: Immediate medical attention\n• Moderate: Follow-up within 2 weeks\n• Low: Continue regular monitoring", fillcolor="#f1f8e9"];
    
    // Database storage
    saveDB [label="Save to Database\n• Store all Z-scores\n• Store classifications\n• Update risk level", fillcolor="#fce4ec"];
    
    // Final output
    output [label="Output Results\n• All Z-scores\n• Classifications\n• Risk level\n• Recommendations", fillcolor="#e8f5e8", shape=ellipse];
    
    // Error handling
    error [label="Error Handling\n• Invalid input\n• Age out of range\n• Height out of range", fillcolor="#ffcdd2", shape=diamond];
    
    // Flow connections
    start -> validate;
    validate -> calcAge [label="Valid"];
    validate -> error [label="Invalid"];
    
    calcAge -> calcBMI;
    calcBMI -> wfa;
    calcBMI -> hfa;
    calcBMI -> wfh;
    calcBMI -> wfl;
    calcBMI -> bfa;
    
    wfa -> wfaCalc;
    hfa -> hfaCalc;
    wfh -> wfhCalc;
    wfl -> wflCalc;
    bfa -> bfaCalc;
    
    wfaCalc -> wfaClass;
    hfaCalc -> hfaClass;
    wfhCalc -> wfhClass;
    wflCalc -> wflClass;
    bfaCalc -> bfaClass;
    
    wfaClass -> riskAssess;
    hfaClass -> riskAssess;
    wfhClass -> riskAssess;
    wflClass -> riskAssess;
    bfaClass -> riskAssess;
    
    riskAssess -> recommendations;
    recommendations -> saveDB;
    saveDB -> output;
    
    // Error flow
    error -> start [label="Retry"];
    
    // Styling for different types of nodes
    subgraph cluster_input {
        label="Input Processing";
        style=filled;
        fillcolor="#f5f5f5";
        start; validate; calcAge; calcBMI;
    }
    
    subgraph cluster_indicators {
        label="Growth Indicators";
        style=filled;
        fillcolor="#e8f5e8";
        wfa; hfa; wfh; wfl; bfa;
    }
    
    subgraph cluster_calculations {
        label="Z-Score Calculations";
        style=filled;
        fillcolor="#fff9c4";
        wfaCalc; hfaCalc; wfhCalc; wflCalc; bfaCalc;
    }
    
    subgraph cluster_classifications {
        label="Classifications";
        style=filled;
        fillcolor="#ffebee";
        wfaClass; hfaClass; wfhClass; wflClass; bfaClass;
    }
    
    subgraph cluster_assessment {
        label="Risk Assessment & Output";
        style=filled;
        fillcolor="#e3f2fd";
        riskAssess; recommendations; saveDB; output;
    }
}
